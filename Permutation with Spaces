class Solution {
  public:
  
  void solve(string op, string s, vector<string> &result) {
        // Base condition
        if (s.length() == 0) {
            result.push_back(op);
            return;
        }

        string op1 = op; // Option 1: Add space before the character
        string op2 = op; // Option 2: No space before the character

        op1.push_back(' ');
        op1.push_back(s[0]);
        op2.push_back(s[0]);

        s.erase(s.begin()); // Remove the first character

        solve(op1, s, result);
        solve(op2, s, result);
    }

    vector<string> permutation(string s) {
        // Code Here
        vector<string> result;
        string op = "";
        op.push_back(s[0]); // Start with the first character
        s.erase(s.begin()); // Remove the first character from input
        solve(op, s, result); // Start recursive function
        return result;
        
    }
};
